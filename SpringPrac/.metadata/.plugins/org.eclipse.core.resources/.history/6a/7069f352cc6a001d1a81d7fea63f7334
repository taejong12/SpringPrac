package com.study;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.Step;
import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;
import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;
import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import lombok.RequiredArgsConstructor;

// 배치를 위한 기본적인 설정 어노테이션
// 컴포넌트가 아닌 @Configuration 으로 객체를 생성해줘야 한다
// Chunk 모델 기반이 아닌 Task 기반
// 해당하는 인터페이스를 구현해서 불러와야 한다

@EnableBatchProcessing
@Configuration
@RequiredArgsConstructor
public class BatchConfig {
	private final JobBuilderFactory jobBuilderFactory;
	private final StepBuilderFactory stepBuilderFactory;
	private final HelloWorldTasklet helloWorldTasklet;
	
	@Bean
	public Job helloWorldJob(Step helloWorldStep) {
		return jobBuilderFactory.get("helloWorldJob")
				.flow(helloWorldStep)
				.end()
				.build();
	}
	
	// 한개의 스택을 구현((Chunk 모델)-step-job-job런처)했던 것처럼 tasklet에서도 실행
	@Bean
	public Step helloWorldStep() {
		return stepBuilderFactory.get("helloWorldStep")
				.tasklet(helloWorldTasklet)
				// 빌드 스택 쌓기
				.build();
	}
		
}
